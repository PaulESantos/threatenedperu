% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_match.R
\name{is_threatened_peru}
\alias{is_threatened_peru}
\title{Check if species are threatened in Peru}
\usage{
is_threatened_peru(splist, target_type = "original", return_details = FALSE)
}
\arguments{
\item{splist}{A character vector containing the list of species names to be
checked for threatened status in Peru.}

\item{target_type}{Character string specifying which database version to use.
Options are:
\itemize{
  \item \code{"original"} (default): Uses the original threatened species database
  \item \code{"updated"}: Uses the updated database with synonyms
}}

\item{return_details}{Logical. If TRUE, returns detailed matching results.
If FALSE (default), returns only the threat status vector.}
}
\value{
If return_details = FALSE: A character vector indicating the threat
status of each species ("Not threatened", "Threatened - CR", "Threatened - EN",
"Threatened - VU", "Threatened - NT", or "Threatened - Unknown category").

If return_details = TRUE: A tibble with detailed matching results including
matched names, threat categories, and matching process information.
}
\description{
This function checks if a list of species names are threatened according to the
Peruvian threatened species database. The function allows fuzzy matching for
species names with a maximum distance threshold to handle potential typos or
variations in species names.
}
\examples{
\donttest{
#' # Simple usage - returns threat status vector
species_list <- c("Cattleya maxima", "Polylepis incana", "Fake species")
threat_status <- is_threatened_peru(species_list)
threat_status

# Detailed usage - returns full tibble
detailed_results <- is_threatened_peru(species_list,
                                       return_details = TRUE)
detailed_results
}
}
