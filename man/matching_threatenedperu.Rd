% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/threated_match.R
\name{matching_threatenedperu}
\alias{matching_threatenedperu}
\title{Match Species Names to Threatened Plant List of Peru}
\usage{
matching_threatenedperu(splist, target_df = "original")
}
\arguments{
\item{splist}{A character vector containing the species names to be matched.}

\item{target_df}{Character string specifying which database version to use.
Options are:
\itemize{
  \item \code{"original"} (default): Uses the original threatened species database
  \item \code{"updated"}: Uses the updated database with synonyms
}}
}
\value{
A tibble with the following key columns:
\describe{
  \item{sorter}{Original row number for maintaining input order}
  \item{Orig.Name}{Original species name as provided}
  \item{Matched.Name}{Matched name from the database (properly formatted)}
  \item{Threat.Status}{Threat status: "Threatened - [CR|EN|VU|NT]" or "Not threatened"}
  \item{threat_category}{IUCN threat category (CR, EN, VU, NT) if threatened}
  \item{Matched.Genus}{Matched genus name (uppercase)}
  \item{Matched.Species}{Matched species epithet (uppercase)}
  \item{Matched.Infraspecies}{Matched infraspecies epithet if applicable}
  \item{matched}{Logical indicating if a match was found}
  \item{direct_match}{Logical indicating if direct match succeeded}
  \item{genus_match}{Logical indicating if genus match succeeded}
  \item{fuzzy_match_genus}{Logical indicating if fuzzy genus match was used}
  \item{direct_match_species_within_genus}{Logical for direct species match}
  \item{suffix_match_species_within_genus}{Logical for suffix match}
  \item{fuzzy_match_species_within_genus}{Logical for fuzzy species match}
  \item{fuzzy_genus_dist}{String distance for fuzzy genus matches}
  \item{fuzzy_species_dist}{String distance for fuzzy species matches}
}
}
\description{
This function matches given species names against the internal database of threatened
plant species in Peru. It uses a hierarchical matching strategy that includes direct
matching, genus-level matching, fuzzy matching, and suffix matching to maximize
successful matches while maintaining accuracy.
}
\details{
The matching process follows a hierarchical pipeline:

\strong{Step 1: Direct Match}
Attempts exact matches for genus, species, and infraspecies simultaneously.

\strong{Step 2: Genus Match}
For unmatched names, matches the genus against the database.

\strong{Step 3: Fuzzy Genus Match}
Uses string distance algorithms (max distance = 1) to match genus names
with minor spelling variations.

\strong{Step 4: Species within Genus Match}
For matched genera, attempts direct matching of species epithets.

\strong{Step 5a: Suffix Match}
Handles common Latin suffix variations (e.g., -a, -um, -us, -is).

\strong{Step 5b: Fuzzy Species Match}
Uses string distance algorithms to match species epithets within matched genera.

\strong{Step 6: Infraspecies Fuzzy Match}
For matched species with infraspecies, attempts fuzzy matching of
infraspecific epithets.

The maximum edit distance is intentionally set to one to maintain high
matching accuracy while allowing for common typos.
}
\note{
The function performs additional data cleaning at the end to remove duplicate
matches and handle specific edge cases in the Cactaceae family.
}
\examples{
\dontrun{
# Basic usage with original database
species_list <- c("Cattleya maxima", "Polylepis incana", "Unknown species")
results <- matching_threatenedperu(species_list, target_df = "original")

# View matching details
View(results)

# Check which matching methods were used
table(results$fuzzy_match_genus, useNA = "ifany")

# Using updated database with synonyms
results_updated <- matching_threatenedperu(species_list, target_df = "updated")
}

}
\seealso{
\code{\link{is_threatened_peru}} for a simplified interface
}
